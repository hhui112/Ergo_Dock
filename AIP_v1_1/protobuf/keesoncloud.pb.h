/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7 at Tue Dec 07 09:43:14 2021. */

#ifndef PB_KEESONCLOUD_PB_H_INCLUDED
#define PB_KEESONCLOUD_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _EnumCommandStatus {
    EnumCommandStatus_QS_SUCCESS = 0,
    EnumCommandStatus_QS_INTERNAL_ERROR = 101,
    EnumCommandStatus_QS_TIMEOUT = 102,
    EnumCommandStatus_QS_NO_RESOURCE = 103
} EnumCommandStatus;
#define _EnumCommandStatus_MIN EnumCommandStatus_QS_SUCCESS
#define _EnumCommandStatus_MAX EnumCommandStatus_QS_NO_RESOURCE
#define _EnumCommandStatus_ARRAYSIZE ((EnumCommandStatus)(EnumCommandStatus_QS_NO_RESOURCE+1))

/* Struct definitions */
typedef struct _BedCommandMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    pb_callback_t cmd;
/* @@protoc_insertion_point(struct:BedCommandMessage) */
} BedCommandMessage;

typedef struct _BedStatusMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    pb_callback_t stat;
    int32_t stat_len;
/* @@protoc_insertion_point(struct:BedStatusMessage) */
} BedStatusMessage;

typedef struct _BreathRawDataMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    pb_callback_t data;
    int32_t data_len;
/* @@protoc_insertion_point(struct:BreathRawDataMessage) */
} BreathRawDataMessage;

typedef struct _CliCommand {
    pb_callback_t deviceID;
    int32_t timestamp;
    pb_callback_t command;
/* @@protoc_insertion_point(struct:CliCommand) */
} CliCommand;

typedef struct _DbpRawDataMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    pb_callback_t data;
    int32_t data_len;
/* @@protoc_insertion_point(struct:DbpRawDataMessage) */
} DbpRawDataMessage;

typedef struct _DownloadRangePostMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    int32_t firmwareLenth;
    int32_t firmwareStartOffset;
    int32_t firmwareEndOffset;
/* @@protoc_insertion_point(struct:DownloadRangePostMessage) */
} DownloadRangePostMessage;

typedef struct _HeartbeatRawDataMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    pb_callback_t data;
    int32_t data_len;
/* @@protoc_insertion_point(struct:HeartbeatRawDataMessage) */
} HeartbeatRawDataMessage;

typedef struct _MovementRawDataMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    pb_callback_t data;
    int32_t data_len;
/* @@protoc_insertion_point(struct:MovementRawDataMessage) */
} MovementRawDataMessage;

typedef struct _SbpRawDataMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    pb_callback_t data;
    int32_t data_len;
/* @@protoc_insertion_point(struct:SbpRawDataMessage) */
} SbpRawDataMessage;

typedef struct _Sensor1minMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    int32_t sequence;
    int32_t onOffBed;
    int32_t heartbeat;
    int32_t breathRate;
    int32_t Mmin;
    int32_t Mmean;
    int32_t NSD;
    int32_t Npd;
    int32_t SBP;
    int32_t DBP;
/* @@protoc_insertion_point(struct:Sensor1minMessage) */
} Sensor1minMessage;

typedef struct _Sensor5secMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    int32_t sequence;
    pb_callback_t status;
    int32_t heartbeat;
    int32_t breathRate;
/* @@protoc_insertion_point(struct:Sensor5secMessage) */
} Sensor5secMessage;

typedef struct _SleepCycleRepoMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    int32_t calResult;
    int32_t startTime;
    int32_t totalSleepTime;
    int32_t sleepEfficiency;
    int32_t sleepQuality;
    int32_t turnoverTimes;
    int32_t sleepLatency;
    int32_t offBedTimes;
    int32_t cRSD;
    int32_t slop1;
    int32_t slop2;
    int32_t oSATimes;
/* @@protoc_insertion_point(struct:SleepCycleRepoMessage) */
} SleepCycleRepoMessage;

typedef struct _SnoreRawDataMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    pb_callback_t data;
    int32_t data_len;
/* @@protoc_insertion_point(struct:SnoreRawDataMessage) */
} SnoreRawDataMessage;

typedef struct _StateRawDataMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    pb_callback_t data;
    int32_t data_len;
/* @@protoc_insertion_point(struct:StateRawDataMessage) */
} StateRawDataMessage;

typedef struct _TokenPostMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    int32_t softwareMajorVersion;
    int32_t softwareMinorVersion;
    int32_t softwareReviseVersion;
    int32_t firmwareLenth;
/* @@protoc_insertion_point(struct:TokenPostMessage) */
} TokenPostMessage;

typedef struct _VersionPostMessage {
    pb_callback_t deviceID;
    int32_t timestamp;
    int32_t softwareMajorVersion;
    int32_t softwareMinorVersion;
    int32_t softwareReviseVersion;
/* @@protoc_insertion_point(struct:VersionPostMessage) */
} VersionPostMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define VersionPostMessage_init_default          {{{NULL}, NULL}, 0, 0, 0, 0}
#define TokenPostMessage_init_default            {{{NULL}, NULL}, 0, 0, 0, 0, 0}
#define DownloadRangePostMessage_init_default    {{{NULL}, NULL}, 0, 0, 0, 0}
#define CliCommand_init_default                  {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define Sensor5secMessage_init_default           {{{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, 0}
#define Sensor1minMessage_init_default           {{{NULL}, NULL}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define SleepCycleRepoMessage_init_default       {{{NULL}, NULL}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define StateRawDataMessage_init_default         {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define HeartbeatRawDataMessage_init_default     {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define BreathRawDataMessage_init_default        {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define MovementRawDataMessage_init_default      {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define SnoreRawDataMessage_init_default         {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define SbpRawDataMessage_init_default           {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define DbpRawDataMessage_init_default           {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define BedCommandMessage_init_default           {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define BedStatusMessage_init_default            {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define VersionPostMessage_init_zero             {{{NULL}, NULL}, 0, 0, 0, 0}
#define TokenPostMessage_init_zero               {{{NULL}, NULL}, 0, 0, 0, 0, 0}
#define DownloadRangePostMessage_init_zero       {{{NULL}, NULL}, 0, 0, 0, 0}
#define CliCommand_init_zero                     {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define Sensor5secMessage_init_zero              {{{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, 0}
#define Sensor1minMessage_init_zero              {{{NULL}, NULL}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define SleepCycleRepoMessage_init_zero          {{{NULL}, NULL}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define StateRawDataMessage_init_zero            {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define HeartbeatRawDataMessage_init_zero        {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define BreathRawDataMessage_init_zero           {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define MovementRawDataMessage_init_zero         {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define SnoreRawDataMessage_init_zero            {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define SbpRawDataMessage_init_zero              {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define DbpRawDataMessage_init_zero              {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}
#define BedCommandMessage_init_zero              {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define BedStatusMessage_init_zero               {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define BedCommandMessage_deviceID_tag           1
#define BedCommandMessage_timestamp_tag          2
#define BedCommandMessage_cmd_tag                3
#define BedStatusMessage_deviceID_tag            1
#define BedStatusMessage_timestamp_tag           2
#define BedStatusMessage_stat_tag                3
#define BedStatusMessage_stat_len_tag            4
#define BreathRawDataMessage_deviceID_tag        1
#define BreathRawDataMessage_timestamp_tag       2
#define BreathRawDataMessage_data_tag            3
#define BreathRawDataMessage_data_len_tag        4
#define CliCommand_deviceID_tag                  1
#define CliCommand_timestamp_tag                 2
#define CliCommand_command_tag                   3
#define DbpRawDataMessage_deviceID_tag           1
#define DbpRawDataMessage_timestamp_tag          2
#define DbpRawDataMessage_data_tag               3
#define DbpRawDataMessage_data_len_tag           4
#define DownloadRangePostMessage_deviceID_tag    1
#define DownloadRangePostMessage_timestamp_tag   2
#define DownloadRangePostMessage_firmwareLenth_tag 3
#define DownloadRangePostMessage_firmwareStartOffset_tag 4
#define DownloadRangePostMessage_firmwareEndOffset_tag 5
#define HeartbeatRawDataMessage_deviceID_tag     1
#define HeartbeatRawDataMessage_timestamp_tag    2
#define HeartbeatRawDataMessage_data_tag         3
#define HeartbeatRawDataMessage_data_len_tag     4
#define MovementRawDataMessage_deviceID_tag      1
#define MovementRawDataMessage_timestamp_tag     2
#define MovementRawDataMessage_data_tag          3
#define MovementRawDataMessage_data_len_tag      4
#define SbpRawDataMessage_deviceID_tag           1
#define SbpRawDataMessage_timestamp_tag          2
#define SbpRawDataMessage_data_tag               3
#define SbpRawDataMessage_data_len_tag           4
#define Sensor1minMessage_deviceID_tag           1
#define Sensor1minMessage_timestamp_tag          2
#define Sensor1minMessage_sequence_tag           3
#define Sensor1minMessage_onOffBed_tag           4
#define Sensor1minMessage_heartbeat_tag          5
#define Sensor1minMessage_breathRate_tag         6
#define Sensor1minMessage_Mmin_tag               7
#define Sensor1minMessage_Mmean_tag              8
#define Sensor1minMessage_NSD_tag                9
#define Sensor1minMessage_Npd_tag                10
#define Sensor1minMessage_SBP_tag                11
#define Sensor1minMessage_DBP_tag                12
#define Sensor5secMessage_deviceID_tag           1
#define Sensor5secMessage_timestamp_tag          2
#define Sensor5secMessage_sequence_tag           3
#define Sensor5secMessage_status_tag             4
#define Sensor5secMessage_heartbeat_tag          5
#define Sensor5secMessage_breathRate_tag         6
#define SleepCycleRepoMessage_deviceID_tag       1
#define SleepCycleRepoMessage_timestamp_tag      2
#define SleepCycleRepoMessage_calResult_tag      3
#define SleepCycleRepoMessage_startTime_tag      4
#define SleepCycleRepoMessage_totalSleepTime_tag 5
#define SleepCycleRepoMessage_sleepEfficiency_tag 6
#define SleepCycleRepoMessage_sleepQuality_tag   7
#define SleepCycleRepoMessage_turnoverTimes_tag  8
#define SleepCycleRepoMessage_sleepLatency_tag   9
#define SleepCycleRepoMessage_offBedTimes_tag    10
#define SleepCycleRepoMessage_cRSD_tag           11
#define SleepCycleRepoMessage_slop1_tag          12
#define SleepCycleRepoMessage_slop2_tag          13
#define SleepCycleRepoMessage_oSATimes_tag       14
#define SnoreRawDataMessage_deviceID_tag         1
#define SnoreRawDataMessage_timestamp_tag        2
#define SnoreRawDataMessage_data_tag             3
#define SnoreRawDataMessage_data_len_tag         4
#define StateRawDataMessage_deviceID_tag         1
#define StateRawDataMessage_timestamp_tag        2
#define StateRawDataMessage_data_tag             3
#define StateRawDataMessage_data_len_tag         4
#define TokenPostMessage_deviceID_tag            1
#define TokenPostMessage_timestamp_tag           2
#define TokenPostMessage_softwareMajorVersion_tag 3
#define TokenPostMessage_softwareMinorVersion_tag 4
#define TokenPostMessage_softwareReviseVersion_tag 5
#define TokenPostMessage_firmwareLenth_tag       6
#define VersionPostMessage_deviceID_tag          1
#define VersionPostMessage_timestamp_tag         2
#define VersionPostMessage_softwareMajorVersion_tag 3
#define VersionPostMessage_softwareMinorVersion_tag 4
#define VersionPostMessage_softwareReviseVersion_tag 5

/* Struct field encoding specification for nanopb */
extern const pb_field_t VersionPostMessage_fields[6];
extern const pb_field_t TokenPostMessage_fields[7];
extern const pb_field_t DownloadRangePostMessage_fields[6];
extern const pb_field_t CliCommand_fields[4];
extern const pb_field_t Sensor5secMessage_fields[7];
extern const pb_field_t Sensor1minMessage_fields[13];
extern const pb_field_t SleepCycleRepoMessage_fields[15];
extern const pb_field_t StateRawDataMessage_fields[5];
extern const pb_field_t HeartbeatRawDataMessage_fields[5];
extern const pb_field_t BreathRawDataMessage_fields[5];
extern const pb_field_t MovementRawDataMessage_fields[5];
extern const pb_field_t SnoreRawDataMessage_fields[5];
extern const pb_field_t SbpRawDataMessage_fields[5];
extern const pb_field_t DbpRawDataMessage_fields[5];
extern const pb_field_t BedCommandMessage_fields[4];
extern const pb_field_t BedStatusMessage_fields[5];

/* Maximum encoded size of messages (where known) */
/* VersionPostMessage_size depends on runtime parameters */
/* TokenPostMessage_size depends on runtime parameters */
/* DownloadRangePostMessage_size depends on runtime parameters */
/* CliCommand_size depends on runtime parameters */
/* Sensor5secMessage_size depends on runtime parameters */
/* Sensor1minMessage_size depends on runtime parameters */
/* SleepCycleRepoMessage_size depends on runtime parameters */
/* StateRawDataMessage_size depends on runtime parameters */
/* HeartbeatRawDataMessage_size depends on runtime parameters */
/* BreathRawDataMessage_size depends on runtime parameters */
/* MovementRawDataMessage_size depends on runtime parameters */
/* SnoreRawDataMessage_size depends on runtime parameters */
/* SbpRawDataMessage_size depends on runtime parameters */
/* DbpRawDataMessage_size depends on runtime parameters */
/* BedCommandMessage_size depends on runtime parameters */
/* BedStatusMessage_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define KEESONCLOUD_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
